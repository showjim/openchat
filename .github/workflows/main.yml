name: Docker Image CI

on:
  push:
    tags:
      - V*
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      logLevel:
        description: "Log level"
        required: true
        default: "warning"
      tags:
        description: "Test scenario tags"

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
      attestations: write
      id-token: write
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4
      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          # GitHub Repo => Settings => Secrets 增加 docker hub 登录密钥信息
          # DOCKERHUB_USERNAME 是 docker hub 账号名.
          # DOCKERHUB_TOKEN: docker hub => Account Setting => Security 创建.
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      # 通过 git 命令获取当前 tag 信息, 存入环境变量 APP_VERSION
      - name: Generate App Version
        run: echo APP_VERSION=`git describe --tags --always` >> $GITHUB_ENV
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            showjimzc/openchat
            ghcr.io/${{ github.repository }}
      # 构建 Docker 并推送到 Docker hub
      - name: Build and push the Docker image - 1
        uses: docker/build-push-action@v6
        with:
          push: true
#          tags: |
#            showjimzc/openchat:${{ env.APP_VERSION }}
#            showjimzc/openchat:latest
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
        # run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

#      # Trigger redeploy on dokploy => project webhooks settings
#      - name: Trigger dokploy redeploy
#        run: |
#          curl -X POST "https://dokploy.taishanstone.top/api/deploy/f1bV5wSNJkFCEGh0WQzSs"
